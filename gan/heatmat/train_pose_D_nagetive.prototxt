name: "human/config/gan/train_pose_D_negetive.prototxt"
layer {
  name: "data"
  type: "ImageSegData"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    mirror: false
    crop_size: 321
    mean_value: 104.008
    mean_value: 116.669
    mean_value: 122.675
  }
  image_data_param {
    root_folder: "human/data"
    source: "human/list/train.txt"
    batch_size: 10
    shuffle: true
    label_type: PIXEL
  }
}
##################################################################
###################Generator######################################
layer {
  name: "conv1_1_generator"
  type: "Convolution"
  bottom: "label"
  top: "conv1_1_generator"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1_1_generator"
  type: "ReLU"
  bottom: "conv1_1_generator"
  top: "conv1_1_generator"
}
layer {
  name: "conv1_2_generator"
  type: "Convolution"
  bottom: "conv1_1_generator"
  top: "conv1_2_generator"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1_2_generator"
  type: "ReLU"
  bottom: "conv1_2_generator"
  top: "conv1_2_generator"
}
layer {
  name: "pool1_generator"
  type: "Pooling"
  bottom: "conv1_2_generator"
  top: "pool1_generator"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv2_1_generator"
  type: "Convolution"
  bottom: "pool1_generator"
  top: "conv2_1_generator"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2_1_generator"
  type: "ReLU"
  bottom: "conv2_1_generator"
  top: "conv2_1_generator"
}
layer {
  name: "conv2_2_generator"
  type: "Convolution"
  bottom: "conv2_1_generator"
  top: "conv2_2_generator"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2_2_generator"
  type: "ReLU"
  bottom: "conv2_2_generator"
  top: "conv2_2_generator"
}
layer {
  name: "pool2_generator"
  type: "Pooling"
  bottom: "conv2_2_generator"
  top: "pool2_generator"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv3_1_generator"
  type: "Convolution"
  bottom: "pool2_generator"
  top: "conv3_1_generator"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3_1_generator"
  type: "ReLU"
  bottom: "conv3_1_generator"
  top: "conv3_1_generator"
}
layer {
  name: "conv3_2_generator"
  type: "Convolution"
  bottom: "conv3_1_generator"
  top: "conv3_2_generator"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3_2_generator"
  type: "ReLU"
  bottom: "conv3_2_generator"
  top: "conv3_2_generator"
}
layer {
  name: "conv3_3_generator"
  type: "Convolution"
  bottom: "conv3_2_generator"
  top: "conv3_3_generator"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3_3_generator"
  type: "ReLU"
  bottom: "conv3_3_generator"
  top: "conv3_3_generator"
}
layer {
  name: "conv3_4_generator"
  type: "Convolution"
  bottom: "conv3_3_generator"
  top: "conv3_4_generator"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3_4_generator"
  type: "ReLU"
  bottom: "conv3_4_generator"
  top: "conv3_4_generator"
}
layer {
  name: "pool3_generator"
  type: "Pooling"
  bottom: "conv3_4_generator"
  top: "pool3_generator"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv4_1_generator"
  type: "Convolution"
  bottom: "pool3_generator"
  top: "conv4_1_generator"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu4_1_generator"
  type: "ReLU"
  bottom: "conv4_1_generator"
  top: "conv4_1_generator"
}
layer {
  name: "conv4_2_generator"
  type: "Convolution"
  bottom: "conv4_1_generator"
  top: "conv4_2_generator"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu4_2_generator"
  type: "ReLU"
  bottom: "conv4_2_generator"
  top: "conv4_2_generator"
}
layer {
  name: "conv5_1_generator"
  type: "Convolution"
  bottom: "conv4_2_generator"
  top: "conv5_1_generator"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    pad: 0
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "generator_pose"
  type: "PoseCreate"
  bottom: "conv5_1_generator"
  top: "generator_pose"
  top: "generator_label"
  pose_create_param {
    num_joint: 16
    label_value: 0
  }
}
layer {
  name: "silence"
  type: "Silence"
  bottom: "data"
  bottom: "generator_pose"
}

##################################################################
####################Discriminator#################################
layer {
  name: "conv1_1_discriminator"
  type: "Convolution"
  bottom: "conv5_1_generator"
  top: "conv1_1_discriminator"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1_1_discriminator"
  type: "ReLU"
  bottom: "conv1_1_discriminator"
  top: "conv1_1_discriminator"
}
layer {
  name: "conv1_2_discriminator"
  type: "Convolution"
  bottom: "conv1_1_discriminator"
  top: "conv1_2_discriminator"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1_2_discriminator"
  type: "ReLU"
  bottom: "conv1_2_discriminator"
  top: "conv1_2_discriminator"
}
layer {
  name: "pool1_discriminator"
  type: "Pooling"
  bottom: "conv1_2_discriminator"
  top: "pool1_discriminator"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}

layer {
  name: "fc3_discriminator"
  type: "InnerProduct"
  bottom: "pool1_discriminator"
  top: "fc3_discriminator"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 64
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu3_discriminator"
  type: "ReLU"
  bottom: "fc3_discriminator"
  top: "fc3_discriminator"
}
layer {
  name: "drop3_discriminator"
  type: "Dropout"
  bottom: "fc3_discriminator"
  top: "fc3_discriminator"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc4_discriminator"
  type: "InnerProduct"
  bottom: "fc3_discriminator"
  top: "fc4_discriminator"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 64
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu4_discriminator"
  type: "ReLU"
  bottom: "fc4_discriminator"
  top: "fc4_discriminator"
}
layer {
  name: "drop4_discriminator"
  type: "Dropout"
  bottom: "fc4_discriminator"
  top: "fc4_discriminator"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc5_discriminator"
  type: "InnerProduct"
  bottom: "fc4_discriminator"
  top: "fc5_discriminator"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "fc5_discriminator"
  bottom: "generator_label"
  top: "loss"
}

